WEBVTT
Kind: captions
Language: zh-CN

00:00:00.333 --> 00:00:02.567
大家好! 我是 Cezanne Camacho

00:00:02.567 --> 00:00:04.600
我优达学城的一名讲师

00:00:05.100 --> 00:00:07.567
过去 我一直在讲授无人驾驶车课程

00:00:07.567 --> 00:00:10.001
该技术是通过摄像头与传感器让车看到外部世界

00:00:10.001 --> 00:00:11.767
该技术是通过摄像头与传感器让车看到外部世界

00:00:11.767 --> 00:00:14.600
并且根据其看到的景物作出驾驶选择的判断

00:00:14.600 --> 00:00:17.700
而深度学习则是无人车最令人兴奋的工具

00:00:17.700 --> 00:00:20.367
它被用来在真实世界中导航

00:00:20.367 --> 00:00:23.367
使用深度学习 你可以教一辆车学会驾驶

00:00:23.367 --> 00:00:26.033
基于对它所处环境的观察

00:00:26.033 --> 00:00:29.800
比如车辆被周围的行人或其他车辆包围

00:00:29.800 --> 00:00:32.300
或者车辆在公路上快速移动

00:00:32.300 --> 00:00:36.166
那么这辆车应该对各种情况做出正确的反应

00:00:36.166 --> 00:00:39.133
深度学习能够帮助解决的其中一个问题是

00:00:39.133 --> 00:00:41.600
导航车辆高效地通行 以减少拥堵

00:00:41.600 --> 00:00:44.300
交通拥堵问题是我在加州生活的一个心病

00:00:44.300 --> 00:00:46.934
人们每天浪费几个小时在交通拥堵上

00:00:46.934 --> 00:00:49.133
所以 我们一起来看下深度学习在这方面能提供哪些帮助

00:00:49.133 --> 00:00:51.834
作为学习的开始 我们先来看一个项目

00:00:51.834 --> 00:00:54.633
MIT 研发的 Deep Traffic

00:00:55.633 --> 00:00:58.767
Deep Traffic 是一个道路交通的模拟器

00:00:58.767 --> 00:01:02.367
红色的车辆被神经网络控制 你可以对其进行训练

00:01:02.767 --> 00:01:06.200
一个神经网络只是一个计算机程序 它被松散地建模

00:01:06.200 --> 00:01:09.367
模拟了人脑处理信息和学习的过程

00:01:09.767 --> 00:01:13.400
这些神经网络如同人类一样了解世界

00:01:13.400 --> 00:01:15.300
通过不断试错学习

00:01:15.300 --> 00:01:17.433
我们来一起看下这个示例是如何运行的

00:01:17.433 --> 00:01:20.533
这辆车在开始的时候对其环境所知甚少

00:01:20.834 --> 00:01:23.300
交通规则是事先写好的

00:01:23.300 --> 00:01:25.734
所以这辆车永远不会撞到其他物体

00:01:25.734 --> 00:01:29.367
其余的所有行为则是由一个神经网络所控制的

00:01:29.367 --> 00:01:31.967
神经网络获取输入数据

00:01:31.967 --> 00:01:34.333
通过隐藏层处理和学习输入数据 最后输出动作

00:01:34.333 --> 00:01:38.000
通过隐藏层处理和学习输入数据 最后输出动作

00:01:38.000 --> 00:01:41.200
网络的输入是有关车辆周边情况的数据

00:01:41.200 --> 00:01:45.667
例如车辆与其他车道 车辆及空旷处之间的距离

00:01:45.667 --> 00:01:48.667
我把这些数据称为车辆的状态

00:01:49.001 --> 00:01:52.700
车辆可以执行的动作是左移 右移

00:01:52.700 --> 00:01:54.233
或者原地不动

00:01:54.233 --> 00:01:56.100
然后是加速或减速

00:01:56.600 --> 00:02:00.900
随着时间的推移 不断通过新的状态计算新的动作

00:02:00.900 --> 00:02:03.800
每一次网络都能学到更多

00:02:03.800 --> 00:02:08.200
哪种状态下做哪种动作能够最快通过车流

00:02:08.800 --> 00:02:11.467
这种深度学习叫强化学习

00:02:12.166 --> 00:02:14.233
车辆一开始不知道任何知识

00:02:14.233 --> 00:02:18.333
通过支持或奖励某种动作和状态来学习

00:02:18.333 --> 00:02:20.433
从而更快导航车辆行驶

00:02:20.433 --> 00:02:23.001
通过上述机制强化了最好的行为

00:02:23.001 --> 00:02:27.934
因此 只给出明确定义的输入和目标 比如最快速度行驶

00:02:27.934 --> 00:02:31.166
车辆就可以自己学会如何做出决策

00:02:31.600 --> 00:02:34.867
你的工作是调整输入到神经网络的数据

00:02:35.133 --> 00:02:38.600
在代码中 这由 lanesSide 

00:02:38.600 --> 00:02:40.900
patchesAhead 和 patchesBehind 变量控制

00:02:41.867 --> 00:02:46.400
这个模拟器中的车道线由一个个小方块构成

00:02:46.867 --> 00:02:49.533
每辆车的长度大约为3至4个小方块

00:02:49.834 --> 00:02:52.200
你可以看到输入数据

00:02:52.200 --> 00:02:54.867
通过点击 Road Overlay 中的 Learning Input 选项 

00:02:55.934 --> 00:02:58.600
现在输入数据只是一个方块

00:02:58.600 --> 00:03:00.367
并不能提供很多信息

00:03:00.367 --> 00:03:02.967
但如果我将 patchesAhead 的值修改为 6

00:03:03.433 --> 00:03:05.400
将 lanesSide 修改为 1

00:03:05.400 --> 00:03:09.600
然后我单击 Apply Code 我就能看到一个大块学习输入区域

00:03:09.600 --> 00:03:12.066
可以看到在红色车的前面有 6 个方块

00:03:12.066 --> 00:03:14.633
车的左边一个车道 车的右边也有一个车道

00:03:14.633 --> 00:03:16.767
这将提供更多的信息

00:03:16.767 --> 00:03:18.934
你可能想要进一步扩展此区域

00:03:18.934 --> 00:03:22.367
这个区域定义了神经网络将要学习的输入

00:03:23.500 --> 00:03:27.000
你应该调整的其他参数 比如隐藏层的数量

00:03:27.900 --> 00:03:30.400
和神经网络中神经元的数量

00:03:31.300 --> 00:03:35.367
初始代码已经为你定义了1个层 它只有一个神经元

00:03:35.867 --> 00:03:38.200
我建议增加神经元的个数

00:03:38.200 --> 00:03:40.533
复制粘贴这段代码来增加更多的层

00:03:40.533 --> 00:03:44.001
这将提高网络学习输入数据的能力

00:03:44.600 --> 00:03:47.200
你将在稍后的课程中进一步了解隐藏层和神经元的相关知识

00:03:47.800 --> 00:03:52.200
现阶段我们只需要知道一层只能识别数据中的基本模式

00:03:52.200 --> 00:03:56.667
比如在被占用的方块旁边的空方块

00:03:57.033 --> 00:03:59.367
网络中的后面一层会从前一层的输出数据中寻找模式

00:03:59.367 --> 00:04:01.533
网络中的后面一层会从前一层的输出数据中寻找模式

00:04:02.000 --> 00:04:05.333
最终这些隐藏层输出我们期望得到的数据

00:04:05.333 --> 00:04:07.900
决定车辆该执行什么动作

00:04:08.500 --> 00:04:10.633
我知道现在我们看到的这些似乎有些难懂

00:04:10.633 --> 00:04:14.533
这些层只是神经网络寻找模式所使用的方式

00:04:14.533 --> 00:04:16.367
并从这些模式中学习

00:04:16.367 --> 00:04:19.500
这个示例主要是给你一些直觉上的感受

00:04:19.500 --> 00:04:20.567
来初步了解深度学习的工作原理

00:04:20.567 --> 00:04:23.166
以及一个神经网络学得有多快

00:04:23.166 --> 00:04:26.333
去用来解决一个现实世界的问题 比如交通导航

00:04:26.667 --> 00:04:30.233
因此我建议你研究个这神经网络的输入

00:04:30.233 --> 00:04:31.600
当你设置好参数

00:04:31.600 --> 00:04:33.834
单击 Apply Code 再单击 Run Training 按钮

00:04:33.834 --> 00:04:37.001
你将看到车辆的行为在快速改变

00:04:37.300 --> 00:04:39.567
为了检验我们的训练成果

00:04:39.567 --> 00:04:41.400
单击 Start Evaluation Run 按钮

00:04:41.400 --> 00:04:44.066
或者也可以用肉眼观察你的车行驶的速度

00:04:44.066 --> 00:04:45.767
以及超越的车的数量

00:04:45.767 --> 00:04:50.001
争取把速度提高到 65mph 祝你好运！

