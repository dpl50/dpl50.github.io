WEBVTT
Kind: captions
Language: pt-BR

00:00:00.000 --> 00:00:05.167
Olá, meu nome é Cezanne Camacho,
e sou instrutora aqui no Udacity.

00:00:05.200 --> 00:00:07.734
Trabalho no curso
de carros auto-dirigíveis,

00:00:07.767 --> 00:00:10.300
que se concentra
em como um carro vê o mundo

00:00:10.334 --> 00:00:12.033
através de câmeras
e sensores,

00:00:12.067 --> 00:00:15.033
e toma decisões de condução
baseado no que vê.

00:00:15.067 --> 00:00:17.701
Aprendizagem profunda
é uma ótima ferramenta

00:00:17.734 --> 00:00:20.834
que carros auto-dirigíveis usam
para navegar pelo mundo.

00:00:20.868 --> 00:00:23.334
Usando-a,
você ensina um carro a dirigir

00:00:23.367 --> 00:00:26.267
baseado em observações
sobre o seu meio ambiente.

00:00:26.300 --> 00:00:29.901
Tipo, se o carro está cercado
por pessoas ou por outros carros.

00:00:29.934 --> 00:00:32.667
Ou se está se movendo
rapidamente pela estrada.

00:00:32.701 --> 00:00:36.067
O carro deve responder corretamente
em todo tipo de situação.

00:00:36.100 --> 00:00:39.501
Um problema que a aprendizagem
profunda pode ajudar a resolver

00:00:39.534 --> 00:00:41.968
é navegar eficientemente
através do tráfego.

00:00:42.000 --> 00:00:44.534
Conheço bem o problema,
moro na Califórnia.

00:00:44.567 --> 00:00:47.167
Ficamos horas
presos no tráfego, todo dia.

00:00:47.200 --> 00:00:50.234
Vejamos como
a apredizagem profunda pode ajudar.

00:00:50.267 --> 00:00:53.367
Vamos ver um projeto
desenvolvido pelo MIT,

00:00:53.400 --> 00:00:55.701
chamado Tráfego Profundo.

00:00:55.734 --> 00:00:59.634
É uma simulação de tráfego
de estrada, onde o carro vermelho

00:00:59.667 --> 00:01:02.701
é controlado por uma rede neural
que você pode treinar.

00:01:02.734 --> 00:01:06.100
A rede é só um programa
de computador vagamente modelado

00:01:06.133 --> 00:01:09.667
em como o cérebro processa
a informação e aprende com ela.

00:01:09.701 --> 00:01:13.767
Essas redes familiarizam-se
com o mundo como os humanos:

00:01:13.801 --> 00:01:15.434
por tentativa e erro.

00:01:15.467 --> 00:01:17.801
Vamos ver
como esse exemplo funciona.

00:01:17.834 --> 00:01:21.200
O carro começa sem saber muito
sobre seu ambiente.

00:01:21.234 --> 00:01:23.534
Só a segurança
já está programada.

00:01:23.567 --> 00:01:26.167
Este carro
nunca vai bater em outros.

00:01:26.200 --> 00:01:30.200
O resto do seu comportamento
é determinado por uma rede neural.

00:01:30.234 --> 00:01:34.167
Esta rede recebe dados de entrada,
processa e aprende com eles

00:01:34.200 --> 00:01:36.567
através de camadas
ocultas ou invisíveis,

00:01:36.601 --> 00:01:38.467
e produz uma ação.

00:01:38.501 --> 00:01:41.534
A entrada são dados
sobre os arredores do carro,

00:01:41.567 --> 00:01:46.033
como onde está em relação a outras
pistas, carros e espaço vazio.

00:01:46.067 --> 00:01:48.601
Vou chamar estes dados
de "estado do carro".

00:01:48.634 --> 00:01:52.701
A ação que o carro toma será mover
para a esquerda ou para a direita

00:01:52.734 --> 00:01:54.334
ou permanecer
no mesmo lugar,

00:01:54.367 --> 00:01:56.734
e acelerar ou desacelerar.

00:01:56.767 --> 00:02:01.200
Novos estados e ações se repetem
com o correr do tempo,

00:02:01.234 --> 00:02:05.467
e a cada intervalo, a rede aprende
mais sobre quais estados e ações

00:02:05.501 --> 00:02:08.634
resultam na navegação mais rápida
no tráfego.

00:02:08.667 --> 00:02:12.234
É um aprendizado profundo
chamado aprendizado por reforço.

00:02:12.267 --> 00:02:14.501
O carro começa
sem nenhum conhecimento,

00:02:14.534 --> 00:02:18.133
mas aprende a agir
preferindo ações e estados

00:02:18.167 --> 00:02:20.701
que resultam
numa navegação mais rápida.

00:02:20.734 --> 00:02:23.367
Isto reforça
o melhor comportamento.

00:02:23.400 --> 00:02:26.868
Assim, dada só uma entrada
bem definida e um objetivo -

00:02:26.901 --> 00:02:30.167
dirigir mais rápido -
o carro aprende por si

00:02:30.200 --> 00:02:31.734
a navegar pelo tráfego.

00:02:31.767 --> 00:02:35.200
Será trabalho seu
ajustar a entrada à rede neural.

00:02:35.234 --> 00:02:37.834
Em código,
isto é controlado pelas variáveis

00:02:37.868 --> 00:02:41.801
lanesSide, patchesAhead,
e patchesBehind.

00:02:41.834 --> 00:02:44.501
Toda esta simulação
é colocada em uma grade

00:02:44.534 --> 00:02:46.868
definida
por pistas e trechos.

00:02:46.901 --> 00:02:49.834
Cada carro tem
3 ou 4 trechos de comprimento,

00:02:49.868 --> 00:02:52.200
e você pode ver
como é a grade de entrada

00:02:52.234 --> 00:02:55.734
clicando "Sobreposição de Estrada"
e "Entrada de Aprendizado".

00:02:55.767 --> 00:02:58.701
No momento, a entrada
de aprendizado é só um trecho,

00:02:58.734 --> 00:03:00.634
que não fornece
muita informação.

00:03:00.667 --> 00:03:03.701
Mas se eu mudar patchesAhead
para 6,

00:03:03.734 --> 00:03:07.100
e lanesSide para 1,
e clicar "Aplicar código",

00:03:07.133 --> 00:03:09.868
vejo uma maior área
de entrada de aprendizagem.

00:03:09.901 --> 00:03:12.267
Verei 6 manchas
à frente do carro vermelho,

00:03:12.300 --> 00:03:15.000
uma pista à esquerda
e uma à direita dele.

00:03:15.033 --> 00:03:16.968
Isto dá um pouco mais
de informação,

00:03:17.000 --> 00:03:19.367
mas talvez você queira
expandir mais isso.

00:03:19.400 --> 00:03:23.567
Esta área define a entrada
da qual a rede neural aprenderá.

00:03:23.601 --> 00:03:28.067
Outras variáveis que você deve mudar
incluem o número de camadas ocultas

00:03:28.100 --> 00:03:30.901
e o número de neurônios
na rede neural.

00:03:30.934 --> 00:03:34.234
Aqui, há uma única camada
definida no código inicial

00:03:34.267 --> 00:03:35.767
com apenas um neurônio.

00:03:35.801 --> 00:03:39.501
Sugiro aumentar o nº de neurônios
e copiar e colar este código

00:03:39.534 --> 00:03:40.834
para adicionar
mais camadas.

00:03:40.868 --> 00:03:44.901
Isso melhorará a capacidade da rede
de aprender com os dados recebidos.

00:03:44.934 --> 00:03:48.234
Verão mais sobre camadas ocultas
e neurônios depois.

00:03:48.267 --> 00:03:52.667
Por agora, saiba que uma camada pode
reconhecer um padrão básico nos dados,

00:03:52.701 --> 00:03:54.968
como todos os lugares
onde uma célula da grade vazia

00:03:55.000 --> 00:03:57.300
está ao lado de
uma célula da grade ocupada.

00:03:57.334 --> 00:04:01.801
Cada camada sucessiva na rede
procura um padrão na camada anterior.

00:04:01.834 --> 00:04:05.634
Finalmente, as camadas ocultas
produzem as saídas que buscamos,

00:04:05.667 --> 00:04:08.634
que determinam a ação
que o carro deve tomar.

00:04:08.667 --> 00:04:10.868
Sei que isso
parece misterioso agora,

00:04:10.901 --> 00:04:13.267
mas as camadas
são como as redes neurais

00:04:13.300 --> 00:04:16.501
acham padrões em dados
e aprendem com eles.

00:04:16.534 --> 00:04:19.200
Este exemplo
é para lhes dar alguma intuição

00:04:19.234 --> 00:04:20.667
de como funciona
a aprendizagem profunda

00:04:20.701 --> 00:04:23.133
e de como uma rede
pode ser treinada rapidamente

00:04:23.167 --> 00:04:26.767
para resolver um problema real
como a navegação de tráfego.

00:04:26.801 --> 00:04:30.467
Peço que brinquem com as entradas
para a rede neural.

00:04:30.501 --> 00:04:34.100
Depois, clique em "aplicar código"
e "executar treinamento".

00:04:34.133 --> 00:04:37.200
Verá o comportamento do carro
mudar bem rápido.

00:04:37.234 --> 00:04:41.567
E para ver se você está indo bem,
Clique em "iniciar avaliação",

00:04:41.601 --> 00:04:44.133
ou apenas veja
se seu carro está rápido

00:04:44.167 --> 00:04:46.167
e quantos carros ultrapassa.

00:04:46.200 --> 00:04:50.100
Faça ele ir a mais de 100kmh
Boa sorte!

